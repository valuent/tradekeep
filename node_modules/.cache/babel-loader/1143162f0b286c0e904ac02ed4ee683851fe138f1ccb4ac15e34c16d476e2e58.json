{"ast":null,"code":"var _jsxFileName = \"D:\\\\tradekeep\\\\src\\\\service\\\\SendTestData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { db } from \"../utils/config\";\nimport { collection, setDoc, updateDoc, doc, arrayUnion, arrayRemove } from \"firebase/firestore\";\nimport { DataContext } from \"./DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendTestData() {\n  _s();\n  const {\n    userData,\n    userAuthState,\n    siteDate,\n    userTradeData\n  } = useContext(DataContext);\n  const testDataSend = async () => {\n    let s1 = \"Straddle\";\n    let s2 = \"Stragle\";\n    let tradeDataEntryCount = userTradeData.length;\n    let tradeDataTemp = {\n      [tradeDataEntryCount]: {\n        date: siteDate.c.day + \"-\" + siteDate.c.month + \"-\" + siteDate.c.year,\n        noOfStrats: 3,\n        [s1]: {\n          pnl: 6000,\n          detail: {\n            noOfTrade: 3,\n            trade1: {\n              scripName: \"Nifty\",\n              direction: \"Long\",\n              pnl: 2000\n            },\n            trade2: {\n              scripName: \"Nifty\",\n              direction: \"Long\",\n              pnl: 2000\n            },\n            trade3: {\n              scripName: \"Nifty\",\n              direction: \"Long\",\n              pnl: 2000\n            }\n          }\n        },\n        [s2]: {\n          pnl: 6000,\n          detail: {\n            noOfTrade: 3,\n            trade1: {\n              scripName: \"Nifty\",\n              direction: \"Long\",\n              pnl: 2000\n            },\n            trade2: {\n              scripName: \"Nifty\",\n              direction: \"Long\",\n              pnl: 2000\n            },\n            trade3: {\n              scripName: \"Nifty\",\n              direction: \"Long\",\n              pnl: 2000\n            }\n          }\n        }\n      }\n    };\n    console.log(tradeDataTemp);\n    // for (let i = 0; i < 5; i++) {\n    //   data.push(data[i]);\n    // }\n\n    const testingSendingData = doc(db, \"usersTradeData\", \"valuentfintech@gmail.com_tradeData_1\");\n    // await updateDoc(testingSendingData, { strategyTags: arrayUnion(data) });\n    await setDoc(testingSendingData, {\n      tradesData: tradeDataTemp\n    }, {\n      merge: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testDataSend,\n      children: \"send Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(SendTestData, \"p+CwIzzBGow0edQEngi36jVEAos=\");\n_c = SendTestData;\nexport default SendTestData;\nvar _c;\n$RefreshReg$(_c, \"SendTestData\");","map":{"version":3,"names":["React","useState","useEffect","useContext","db","collection","setDoc","updateDoc","doc","arrayUnion","arrayRemove","DataContext","jsxDEV","_jsxDEV","SendTestData","_s","userData","userAuthState","siteDate","userTradeData","testDataSend","s1","s2","tradeDataEntryCount","length","tradeDataTemp","date","c","day","month","year","noOfStrats","pnl","detail","noOfTrade","trade1","scripName","direction","trade2","trade3","console","log","testingSendingData","tradesData","merge","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/tradekeep/src/service/SendTestData.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { db } from \"../utils/config\";\r\nimport {\r\n  collection,\r\n  setDoc,\r\n  updateDoc,\r\n  doc,\r\n  arrayUnion,\r\n  arrayRemove,\r\n} from \"firebase/firestore\";\r\nimport { DataContext } from \"./DataContext\";\r\n\r\nfunction SendTestData() {\r\n  const { userData, userAuthState, siteDate, userTradeData } =\r\n    useContext(DataContext);\r\n\r\n  const testDataSend = async () => {\r\n    let s1 = \"Straddle\";\r\n    let s2 = \"Stragle\";\r\n\r\n    let tradeDataEntryCount = userTradeData.length;\r\n    let tradeDataTemp = {\r\n      [tradeDataEntryCount]: {\r\n        date: siteDate.c.day + \"-\" + siteDate.c.month + \"-\" + siteDate.c.year,\r\n        noOfStrats: 3,\r\n        [s1]: {\r\n          pnl: 6000,\r\n          detail: {\r\n            noOfTrade: 3,\r\n            trade1: {\r\n              scripName: \"Nifty\",\r\n              direction: \"Long\",\r\n              pnl: 2000,\r\n            },\r\n            trade2: {\r\n              scripName: \"Nifty\",\r\n              direction: \"Long\",\r\n              pnl: 2000,\r\n            },\r\n            trade3: {\r\n              scripName: \"Nifty\",\r\n              direction: \"Long\",\r\n              pnl: 2000,\r\n            },\r\n          },\r\n        },\r\n        [s2]: {\r\n          pnl: 6000,\r\n          detail: {\r\n            noOfTrade: 3,\r\n            trade1: {\r\n              scripName: \"Nifty\",\r\n              direction: \"Long\",\r\n              pnl: 2000,\r\n            },\r\n            trade2: {\r\n              scripName: \"Nifty\",\r\n              direction: \"Long\",\r\n              pnl: 2000,\r\n            },\r\n            trade3: {\r\n              scripName: \"Nifty\",\r\n              direction: \"Long\",\r\n              pnl: 2000,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    console.log(tradeDataTemp);\r\n    // for (let i = 0; i < 5; i++) {\r\n    //   data.push(data[i]);\r\n    // }\r\n\r\n    const testingSendingData = doc(\r\n      db,\r\n      \"usersTradeData\",\r\n      \"valuentfintech@gmail.com_tradeData_1\"\r\n    );\r\n    // await updateDoc(testingSendingData, { strategyTags: arrayUnion(data) });\r\n    await setDoc(\r\n      testingSendingData,\r\n      { tradesData: tradeDataTemp },\r\n      { merge: true }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={testDataSend}>send Data</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendTestData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SACEC,UAAU,EACVC,MAAM,EACNC,SAAS,EACTC,GAAG,EACHC,UAAU,EACVC,WAAW,QACN,oBAAoB;AAC3B,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC,aAAa;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GACxDhB,UAAU,CAACQ,WAAW,CAAC;EAEzB,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,EAAE,GAAG,UAAU;IACnB,IAAIC,EAAE,GAAG,SAAS;IAElB,IAAIC,mBAAmB,GAAGJ,aAAa,CAACK,MAAM;IAC9C,IAAIC,aAAa,GAAG;MAClB,CAACF,mBAAmB,GAAG;QACrBG,IAAI,EAAER,QAAQ,CAACS,CAAC,CAACC,GAAG,GAAG,GAAG,GAAGV,QAAQ,CAACS,CAAC,CAACE,KAAK,GAAG,GAAG,GAAGX,QAAQ,CAACS,CAAC,CAACG,IAAI;QACrEC,UAAU,EAAE,CAAC;QACb,CAACV,EAAE,GAAG;UACJW,GAAG,EAAE,IAAI;UACTC,MAAM,EAAE;YACNC,SAAS,EAAE,CAAC;YACZC,MAAM,EAAE;cACNC,SAAS,EAAE,OAAO;cAClBC,SAAS,EAAE,MAAM;cACjBL,GAAG,EAAE;YACP,CAAC;YACDM,MAAM,EAAE;cACNF,SAAS,EAAE,OAAO;cAClBC,SAAS,EAAE,MAAM;cACjBL,GAAG,EAAE;YACP,CAAC;YACDO,MAAM,EAAE;cACNH,SAAS,EAAE,OAAO;cAClBC,SAAS,EAAE,MAAM;cACjBL,GAAG,EAAE;YACP;UACF;QACF,CAAC;QACD,CAACV,EAAE,GAAG;UACJU,GAAG,EAAE,IAAI;UACTC,MAAM,EAAE;YACNC,SAAS,EAAE,CAAC;YACZC,MAAM,EAAE;cACNC,SAAS,EAAE,OAAO;cAClBC,SAAS,EAAE,MAAM;cACjBL,GAAG,EAAE;YACP,CAAC;YACDM,MAAM,EAAE;cACNF,SAAS,EAAE,OAAO;cAClBC,SAAS,EAAE,MAAM;cACjBL,GAAG,EAAE;YACP,CAAC;YACDO,MAAM,EAAE;cACNH,SAAS,EAAE,OAAO;cAClBC,SAAS,EAAE,MAAM;cACjBL,GAAG,EAAE;YACP;UACF;QACF;MACF;IACF,CAAC;IAEDQ,OAAO,CAACC,GAAG,CAAChB,aAAa,CAAC;IAC1B;IACA;IACA;;IAEA,MAAMiB,kBAAkB,GAAGlC,GAAG,CAC5BJ,EAAE,EACF,gBAAgB,EAChB,sCACF,CAAC;IACD;IACA,MAAME,MAAM,CACVoC,kBAAkB,EAClB;MAAEC,UAAU,EAAElB;IAAc,CAAC,EAC7B;MAAEmB,KAAK,EAAE;IAAK,CAChB,CAAC;EACH,CAAC;EAED,oBACE/B,OAAA;IAAAgC,QAAA,eACEhC,OAAA;MAAQiC,OAAO,EAAE1B,YAAa;MAAAyB,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACnC,EAAA,CAjFQD,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAmFrB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}