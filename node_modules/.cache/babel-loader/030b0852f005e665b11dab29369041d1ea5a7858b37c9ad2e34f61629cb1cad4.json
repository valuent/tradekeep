{"ast":null,"code":"var _jsxFileName = \"D:\\\\tradekeep\\\\src\\\\service\\\\CheckDocSize.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { db } from \"../utils/config\";\nimport { getDoc, setDoc, updateDoc, doc } from \"firebase/firestore\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../utils/config\";\nimport { DataContext } from \"./DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckDocSize() {\n  _s();\n  const {\n    userData,\n    userAuthState,\n    siteDate\n  } = useContext(DataContext);\n  const [fetchedData, setFetchedData] = useState();\n  const [isAuth, setIsAuth] = useState(false);\n  onAuthStateChanged(auth, currentUser => {\n    if (currentUser !== null && currentUser !== void 0 && currentUser.email) {\n      setIsAuth(currentUser);\n    }\n  });\n  const checkAndAdd = async () => {\n    try {\n      const docDataFetch = await getDoc(doc(db, \"users\", userAuthState === null || userAuthState === void 0 ? void 0 : userAuthState.email, \"userTradeData\", userData === null || userData === void 0 ? void 0 : userData.tradeWritableDoc));\n      if (docDataFetch !== null && docDataFetch !== void 0 && docDataFetch.exists()) {\n        setFetchedData(docDataFetch === null || docDataFetch === void 0 ? void 0 : docDataFetch.data());\n        console.log(\"nullllll\", fetchedData);\n      } else {\n        console.log(\"no doc\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    if (isAuth !== null && isAuth !== void 0 && isAuth.email) {\n      checkAndAdd();\n    }\n  }, [userAuthState]);\n\n  //   checkAndAdd();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkAndAdd,\n      children: \"Clici\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckDocSize, \"hpE6MHQFxGqnecnwvvhI46LHNFU=\");\n_c = CheckDocSize;\nexport default CheckDocSize;\nvar _c;\n$RefreshReg$(_c, \"CheckDocSize\");","map":{"version":3,"names":["React","useState","useEffect","useContext","db","getDoc","setDoc","updateDoc","doc","onAuthStateChanged","auth","DataContext","jsxDEV","_jsxDEV","CheckDocSize","_s","userData","userAuthState","siteDate","fetchedData","setFetchedData","isAuth","setIsAuth","currentUser","email","checkAndAdd","docDataFetch","tradeWritableDoc","exists","data","console","log","err","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/tradekeep/src/service/CheckDocSize.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { db } from \"../utils/config\";\r\nimport { getDoc, setDoc, updateDoc, doc } from \"firebase/firestore\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"../utils/config\";\r\n\r\nimport { DataContext } from \"./DataContext\";\r\n\r\nfunction CheckDocSize() {\r\n  const { userData, userAuthState, siteDate } = useContext(DataContext);\r\n  const [fetchedData, setFetchedData] = useState();\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  onAuthStateChanged(auth, (currentUser) => {\r\n    if (currentUser?.email) {\r\n      setIsAuth(currentUser);\r\n    }\r\n  });\r\n\r\n  const checkAndAdd = async () => {\r\n    try {\r\n      const docDataFetch = await getDoc(\r\n        doc(\r\n          db,\r\n          \"users\",\r\n          userAuthState?.email,\r\n          \"userTradeData\",\r\n          userData?.tradeWritableDoc\r\n        )\r\n      );\r\n      if (docDataFetch?.exists()) {\r\n        setFetchedData(docDataFetch?.data());\r\n        console.log(\"nullllll\", fetchedData);\r\n      } else {\r\n        console.log(\"no doc\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuth?.email) {\r\n      checkAndAdd();\r\n    }\r\n  }, [userAuthState]);\r\n\r\n  //   checkAndAdd();\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={checkAndAdd}>Clici</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckDocSize;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,oBAAoB;AACnE,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAEtC,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAGf,UAAU,CAACQ,WAAW,CAAC;EACrE,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3CQ,kBAAkB,CAACC,IAAI,EAAGa,WAAW,IAAK;IACxC,IAAIA,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEC,KAAK,EAAE;MACtBF,SAAS,CAACC,WAAW,CAAC;IACxB;EACF,CAAC,CAAC;EAEF,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMrB,MAAM,CAC/BG,GAAG,CACDJ,EAAE,EACF,OAAO,EACPa,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,KAAK,EACpB,eAAe,EACfR,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEW,gBACZ,CACF,CAAC;MACD,IAAID,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEE,MAAM,CAAC,CAAC,EAAE;QAC1BR,cAAc,CAACM,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,IAAI,CAAC,CAAC,CAAC;QACpCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,WAAW,CAAC;MACtC,CAAC,MAAM;QACLW,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd,IAAImB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEG,KAAK,EAAE;MACjBC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACR,aAAa,CAAC,CAAC;;EAEnB;;EAEA,oBACEJ,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAQqB,OAAO,EAAET,WAAY;MAAAQ,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACvB,EAAA,CA7CQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA+CrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}